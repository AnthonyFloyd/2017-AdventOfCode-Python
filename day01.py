'''
Advent of Code 2017
Day 1: Inverse Captcha

'''

import unittest

# Part 1 tests and input

PART1_TESTS = [('1122', 3),
               ('1111', 4),
               ('1234', 0),
               ('91212129', 9)]

PART1_INPUT = '237369991482346124663395286354672985457326865748533412179778188397835279584149971999798512279429268727171755461418974558538246429986747532417846157526523238931351898548279549456694488433438982744782258279173323381571985454236569393975735715331438256795579514159946537868358735936832487422938678194757687698143224139243151222475131337135843793611742383267186158665726927967655583875485515512626142935357421852953775733748941926983377725386196187486131337458574829848723711355929684625223564489485597564768317432893836629255273452776232319265422533449549956244791565573727762687439221862632722277129613329167189874939414298584616496839223239197277563641853746193232543222813298195169345186499866147586559781523834595683496151581546829112745533347796213673814995849156321674379644323159259131925444961296821167483628812395391533572555624159939279125341335147234653572977345582135728994395631685618135563662689854691976843435785879952751266627645653981281891643823717528757341136747881518611439246877373935758151119185587921332175189332436522732144278613486716525897262879287772969529445511736924962777262394961547579248731343245241963914775991292177151554446695134653596633433171866618541957233463548142173235821168156636824233487983766612338498874251672993917446366865832618475491341253973267556113323245113845148121546526396995991171739837147479978645166417988918289287844384513974369397974378819848552153961651881528134624869454563488858625261356763562723261767873542683796675797124322382732437235544965647934514871672522777378931524994784845817584793564974285139867972185887185987353468488155283698464226415951583138352839943621294117262483559867661596299753986347244786339543174594266422815794658477629829383461829261994591318851587963554829459353892825847978971823347219468516784857348649693185172199398234123745415271222891161175788713733444497592853221743138324235934216658323717267715318744537689459113188549896737581637879552568829548365738314593851221113932919767844137362623398623853789938824592'

# Part 2 tests and input

PART2_TESTS = [('1212', 6),
               ('1221', 0),
               ('123425', 4),
               ('123123', 12),
               ('12131415', 4)]

PART2_INPUT = PART1_INPUT

# Solution

def calculateCaptcha(integerString, offset=1):
    '''
    Calculates a 'CAPTCHA' checksum by summing integers in a sequence if the current integer matches
    another integer an <offset> distance away from the current integer.

    Inputs are integerString, a string of integers, and an optional offset distance for the comparison.
    Returns an integer sum based on the checksum algorithm.

    '''
    # Convert the string to a list of integers
    integerList = [int(c) for c in integerString]
    initialLength = len(integerList)

    # Duplicate the list to allow for wrapping
    integerList.extend(integerList)

    # Calculate the CAPTCHA
    runningTotal = 0
    lastInteger = -1

    for (counter, integer) in enumerate(integerList):
        if counter == initialLength:
            break

        if integer == integerList[counter + offset]:
            runningTotal += integer

        lastInteger = integer

    return runningTotal

# Unit tests

class TestCaptcha(unittest.TestCase):
    '''
    Tests for Part 1 and Part 2

    '''

    # Part 1, offset=1

    def test_part1(self):
        '''
        Part 1 tests

        '''

        for (testString, testResult) in PART1_TESTS:
            self.assertEqual(calculateCaptcha(testString), testResult)

    # Part 2, offset=len//2

    def test_part2(self):
        '''
        Part 2 tests

        '''

        for (testString, testResult) in PART2_TESTS:
            self.assertEqual(calculateCaptcha(testString, len(testString)//2), testResult)

if __name__ == '__main__':

    print('Advent of Code\nDay 1: Inverse Captcha\n')
    print('Part 1: {0:d}'.format(calculateCaptcha(PART1_INPUT)))
    print('Part 2: {0:d}'.format(calculateCaptcha(PART2_INPUT, len(PART2_INPUT)//2)))
